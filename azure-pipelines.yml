# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - azure

jobs:
  - job: "General"
    steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            mkdir -p ./jdk/binaries/
            curl https://cdn.azul.com/zulu/bin/zulu8.42.0.23-ca-fx-jdk8.0.232-linux_x64.tar.gz --output ./jdk/zulu8.42.0.23-ca-fx-jdk8.0.232-linux_x64.tar.gz

      - task: JavaToolInstaller@0
        inputs:
          jdkFile: ./jdk/zulu8.42.0.23-ca-fx-jdk8.0.232-linux_x64.tar.gz
          versionSpec: "8"
          jdkArchitectureOption: x64
          jdkSourceOption: LocalDirectory
          jdkDestinationDirectory: "./jdk/binaries/"
          cleanDestinationDirectory: true

      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'clean build check publishToMavenLocal'

      - task: Gradle@2
        inputs:
          workingDirectory: 'sample'
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'clean build check'

    pool:
      vmImage: 'ubuntu-18.04'

  - job: "Mac"
    steps:
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'clean macosTest iosTest publishMetadataPublicationToMavenLocal publishIos32PublicationToMavenLocal publishIosPublicationToMavenLocal publishIosSimPublicationToMavenLocal publishMacosPublicationToMavenLocal'

      - task: Gradle@2
        inputs:
          workingDirectory: 'sample'
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'clean iosTest'

    pool:
      vmImage: 'macos-10.14'
