/*
 * Copyright 2019 Russell Wolf
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'kotlin-multiplatform' version '1.3.30'
}
apply plugin: 'com.android.library'

kotlin {
    android {
        publishAllLibraryVariants()
    }
    jvm()
    iosArm64("ios")
    iosX64("iosSim")
    macosX64("macos")
    js {
        configure([compilations.main, compilations.test]) {
            tasks.getByName(compileKotlinTaskName).kotlinOptions {
                metaInfo = true
                sourceMap = true
                moduleKind = 'umd'
            }
        }
    }
    sourceSets {
        all {
            languageSettings {
                useExperimentalAnnotation('kotlin.Experimental')
            }
        }
        commonMain {
            dependencies {
                implementation kotlin("stdlib-common")
                
                implementation project(":multiplatform-settings")
                
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
            }
        }

        androidMain {
            dependencies {
                implementation kotlin("stdlib")

                implementation kotlin("test")
                implementation kotlin("test-junit")
                implementation 'junit:junit:4.12'
            }
        }
        
        jvmMain {
            dependencies {
                implementation kotlin("stdlib")

                implementation kotlin("test")
                implementation kotlin("test-junit")
                implementation 'junit:junit:4.12'
            }
        }

        iosSimMain.dependsOn iosMain
        macosMain.dependsOn iosMain

        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')

                implementation kotlin('test-js')
            }
        }
    }
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
    }
}

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}

apply from: rootProject.file('node-js.gradle')
