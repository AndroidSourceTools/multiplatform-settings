
/*
 * Copyright 2018 Russell Wolf
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext.kotlin_version = '1.2.50'
    repositories {
        google()
        jcenter()
        maven { url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:0.7.1"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.2-SNAPSHOT"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

def keyProps = new Properties()
file("../keys.properties").withInputStream { keyProps.load(it) }

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    version '0.1'
    group 'com.russhwolf'

    publishing {
        repositories {
            maven { url = 'https://dl.bintray.com/russhwolf/multiplatform-settings' }
        }
    }

    bintray {
        user = keyProps.getProperty("bintrayUser")
        key = keyProps.getProperty("bintrayKey")
        pkg {
            repo = 'multiplatform-settings'
            name = 'multiplatform-settings'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/russhwolf/multiplatform-settings.git'
            version {
                name = project.version
                desc = 'Initial bintray release'
                released = new Date()
            }

        }
    }

    bintrayUpload.doFirst {
        publications = project.publishing.publications
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
