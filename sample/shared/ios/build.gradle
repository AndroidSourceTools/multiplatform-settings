/*
 * Copyright 2018 Russell Wolf
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'kotlin-platform-native'

sourceSets {
    main {
        component {
            baseName.set("Shared")
            targets = ['ios_arm64', 'ios_x64']
            outputKinds = [FRAMEWORK]
        }
    }
    test {
        component {
            targets = ['ios_x64']
        }
    }
}

dependencies {
    expectedBy project(':shared:common')
    implementation "com.russhwolf:multiplatform-settings-ios:$library_version"
}

afterEvaluate { project ->
    project.task('test', dependsOn: 'compileTestDebugKotlinNative', type: Exec, overwrite: true) {
        def textExecutable = tasks["compileTestDebugKotlinNative"].outputFile
        commandLine("xcrun", "simctl", "spawn", "iPhone 8", textExecutable)
    }
}

task copyFramework() { project ->
    doLast {
        def srcFile = tasks[getProperty("buildTask")].outputFile
        def targetDir = getProperty("buildDir")
        copy {
            from srcFile.parent
            into targetDir
            include 'Shared.framework/**'
            include 'Shared.framework.dSYM'
        }
    }
}

components.main {
    extraOpts '-Xuse-experimental=kotlin.Experimental'
}
components.test {
    extraOpts '-Xuse-experimental=kotlin.Experimental'
}